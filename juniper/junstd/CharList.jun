module CharList
open(Prelude)

(*
    Interface: CharList
*)

(*
    Function: toUpper

    Converts characters in a character list from lower case to upper case

    Type Signature:
    | (list<uint8; n>) -> list<uint8; n>

    Parameters:
        str : list<uint8; n> - The string to convert to upper case

   Returns:
        A list of characters
*)
fun toUpper(str) =
    str |>
    List:map(fn (c : uint8) ->
        if c >= 97u8 and c <= 122u8 then
            c - 32u8
        else
            c
        end
    end)

(*
    Function: toLower

    Converts characters in a character list from upper case to lower case

    Type Signature:
    | (list<uint8; n>) -> list<uint8; n>

    Parameters:
        str : list<uint8; n> - The string to convert to lower case

   Returns:
        A list of characters
*)
fun toLower(str) =
    str |>
    List:map(fn (c) ->
        if c >= 65u8 and c <= 90u8 then
            c + 32u8
        else
            c
        end
    end)
